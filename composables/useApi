// composables/useApi.js

import { useAsyncData } from '#app';

export const useApi = (path, options = {}) => {
  const { data, pending, error, refresh } = useAsyncData(
    async () => {
      const response = await $fetch(path, {
        ...options,
        headers: {
          Authorization: `Bearer ${localStorage.getItem('accessToken')}`,
        },
      });

      if (response.status === 401 && !options._isRetry) {
        options._isRetry = true; // Метка попытки повтора
        try {
          const refreshResponse = await $fetch(`${process.env.API_URL}/api/refresh`);
          localStorage.setItem('accessToken', refreshResponse.data.accessToken);
          return useApi(path, options); // Повторный вызов с обновленным токеном
        } catch (error) {
          console.log('User is unauthorized');
          throw error;
        }
      }
 
      return response.data;
    },
    {
      watch: [path, localStorage.getItem('accessToken')],
      refetchOnWindowFocus: false,
    }
  );

  return { data, pending, error, refresh };
};
